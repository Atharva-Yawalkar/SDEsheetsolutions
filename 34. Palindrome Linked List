#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

LinkedListNode<int>* findMid(LinkedListNode<int>* head){
        LinkedListNode<int>* slow=head,*fast=head;
        while(fast!=NULL && fast->next!=NULL){
            slow=slow->next;
            fast=fast->next;
            if(fast) fast=fast->next;
        }
        return slow;
    }
LinkedListNode<int>* reverseList(LinkedListNode<int>* head){
        LinkedListNode<int>* prev=NULL,*curr=head,*temp=NULL;
        while(curr != NULL){
            temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
bool compareList(LinkedListNode<int>* head1, LinkedListNode<int>* head2){
        while(head1!=NULL && head2!=NULL){
            if(head1->data != head2->data) return false;
            head1=head1->next;
            head2=head2->next;
        }
        return true;
    }

bool isPalindrome(LinkedListNode<int> *head) {
    // Write your code here.
        if(head==NULL || head->next==NULL) return true;
        LinkedListNode<int>* h=head;
        LinkedListNode<int>* mid = findMid(h);
        LinkedListNode<int>* h2=reverseList(mid);
        return compareList(head,h2);

}
